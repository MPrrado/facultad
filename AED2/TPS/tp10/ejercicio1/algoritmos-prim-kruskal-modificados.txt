ALGORITMO PRIM (g): grafo -> arbol // Obtiene el árbol de recubrimiento mínimo de un grafo
ENTRADA: g, un grafo no dirigido con costos g=(V,E), X: real >= 0 (presupuesto)
SALIDA: T: conjunto de arcos
AUXILIARES: S: conjunto de vértices, sum: real
P1. S <- { 1 } ; T <- VACIO; sum <- 0
P2. Mientras S <> V ^ sum < X hacer
        Elegir en E un arco e=(v1,v2) de longitud mínima tal que v1 PERTENECE S y v2 PERTENECE V-S
        SI (sum + v2 <= X) ENTONCES
            T <- T U {e}
            S <- S U {v2}
            sum <- sum + v2
        SINO 
            X <- 0
P3. Retorna T
P4. Fin.


ALGORITMO KRUSKAL(g): grafo -> arbol //Obtiene el árbol de recubrimiento mínimo de un grafo
ENTRADA: g, un grafo no dirigido con costos g=(V,E)
SALIDA: T, un árbol de expansión mínima para g, X: real >= 0 (presupuesto)
P1. T <- VACIO, X <- 0
P2. Mientras T contiene menos de n-1 aristas hacer
        Elegir de E la arista (v,w) de menor costo
        E = E- {(v,w)}
        Si T U {(v,w)} no tiene ningún ciclo entonces
            T = T U {(v,w)}
            Fusionar la comp. conexas a la que pertenecen v y w
            X <- X + costo{(v,w)}
P3. ESCRIBIR(X)
P4. Retorna T
p5. Fin_Algoritmo